/*
 * timer1.c
 *
 *  Created on: Oct 29, 2022
 *      Author: dell
 */

#include "timer1.h"
#include <avr/io.h>
#include <avr/interrupt.h>
#include "common_macros.h"

static volatile void (*g_callBackPtr)(void) = NULL_PTR;

void Timer1_init(const Timer1_ConfigType * Config_Ptr){
		TCCR1A=(1<<FOC1A);//non pwm

		TCCR1B =((Config_Ptr -> mode)<<WGM12)| ((Config_Ptr -> prescaler)<<CS10);
		TCNT1 = Config_Ptr -> initial_value;
		OCR1A = Config_Ptr -> compare_value;
		SREG|=(1<<7);

		TIMSK |= (1<<OCIE1A);
}


void Timer1_deInit(void){
	/* Clear All Timer1 Registers */
	TCCR1A = 0;
	TCCR1B = 0;
	TCNT1 = 0;
	TIMSK = 0;
}

void Timer1_setCallBack(void(*a_ptr)(void)){
	g_callBackPtr = a_ptr;
}


ISR(TIMER1_COMPA_vect){
	if(g_callBackPtr != NULL_PTR)
	{
		/* Call the Call Back function in the application after the edge is detected */
		(*g_callBackPtr)(); /* another method to call the function using pointer to function g_callBackPtr(); */
	}
}
